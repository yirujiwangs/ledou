<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.DeliveryAddressMapper">
  <resultMap id="BaseResultMap" type="model.DeliveryAddress">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="d_id" jdbcType="INTEGER" property="d_id" />
    <result column="account" jdbcType="VARCHAR" property="account" />
    <result column="consignee" jdbcType="VARCHAR" property="consignee" />
    <result column="contact_way" jdbcType="VARCHAR" property="contact_way" />
    <result column="delivery_area" jdbcType="VARCHAR" property="delivery_area" />
    <result column="delivery_address" jdbcType="VARCHAR" property="delivery_address" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, d_id, account, consignee, contact_way, delivery_area, delivery_address, label, 
    time
  </sql>
  <select id="selectByExample" parameterType="model.DeliveryAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from delivery_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from delivery_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from delivery_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.DeliveryAddressExample">
    delete from delivery_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.DeliveryAddress">
    insert into delivery_address (id, d_id, account, 
      consignee, contact_way, delivery_area, 
      delivery_address, label, time
      )
    values (#{id,jdbcType=INTEGER}, #{d_id,jdbcType=INTEGER}, #{account,jdbcType=VARCHAR}, 
      #{consignee,jdbcType=VARCHAR}, #{contact_way,jdbcType=VARCHAR}, #{delivery_area,jdbcType=VARCHAR}, 
      #{delivery_address,jdbcType=VARCHAR}, #{label,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.DeliveryAddress">
    insert into delivery_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="d_id != null">
        d_id,
      </if>
      <if test="account != null">
        account,
      </if>
      <if test="consignee != null">
        consignee,
      </if>
      <if test="contact_way != null">
        contact_way,
      </if>
      <if test="delivery_area != null">
        delivery_area,
      </if>
      <if test="delivery_address != null">
        delivery_address,
      </if>
      <if test="label != null">
        label,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="d_id != null">
        #{d_id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="contact_way != null">
        #{contact_way,jdbcType=VARCHAR},
      </if>
      <if test="delivery_area != null">
        #{delivery_area,jdbcType=VARCHAR},
      </if>
      <if test="delivery_address != null">
        #{delivery_address,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        #{label,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.DeliveryAddressExample" resultType="java.lang.Integer">
    select count(*) from delivery_address
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update delivery_address
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.d_id != null">
        d_id = #{record.d_id,jdbcType=INTEGER},
      </if>
      <if test="record.account != null">
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.consignee != null">
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.contact_way != null">
        contact_way = #{record.contact_way,jdbcType=VARCHAR},
      </if>
      <if test="record.delivery_area != null">
        delivery_area = #{record.delivery_area,jdbcType=VARCHAR},
      </if>
      <if test="record.delivery_address != null">
        delivery_address = #{record.delivery_address,jdbcType=VARCHAR},
      </if>
      <if test="record.label != null">
        label = #{record.label,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update delivery_address
    set id = #{record.id,jdbcType=INTEGER},
      d_id = #{record.d_id,jdbcType=INTEGER},
      account = #{record.account,jdbcType=VARCHAR},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      contact_way = #{record.contact_way,jdbcType=VARCHAR},
      delivery_area = #{record.delivery_area,jdbcType=VARCHAR},
      delivery_address = #{record.delivery_address,jdbcType=VARCHAR},
      label = #{record.label,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.DeliveryAddress">
    update delivery_address
    <set>
      <if test="d_id != null">
        d_id = #{d_id,jdbcType=INTEGER},
      </if>
      <if test="account != null">
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="consignee != null">
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="contact_way != null">
        contact_way = #{contact_way,jdbcType=VARCHAR},
      </if>
      <if test="delivery_area != null">
        delivery_area = #{delivery_area,jdbcType=VARCHAR},
      </if>
      <if test="delivery_address != null">
        delivery_address = #{delivery_address,jdbcType=VARCHAR},
      </if>
      <if test="label != null">
        label = #{label,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.DeliveryAddress">
    update delivery_address
    set d_id = #{d_id,jdbcType=INTEGER},
      account = #{account,jdbcType=VARCHAR},
      consignee = #{consignee,jdbcType=VARCHAR},
      contact_way = #{contact_way,jdbcType=VARCHAR},
      delivery_area = #{delivery_area,jdbcType=VARCHAR},
      delivery_address = #{delivery_address,jdbcType=VARCHAR},
      label = #{label,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>