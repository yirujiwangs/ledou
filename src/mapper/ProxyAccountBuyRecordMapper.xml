<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.ProxyAccountBuyRecordMapper">
  <resultMap id="BaseResultMap" type="model.ProxyAccountBuyRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="out_trade_no" jdbcType="VARCHAR" property="out_trade_no" />
    <result column="normal_num_pay" jdbcType="INTEGER" property="normal_num_pay" />
    <result column="platform_num_pay" jdbcType="INTEGER" property="platform_num_pay" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="proxy_phone" jdbcType="VARCHAR" property="proxy_phone" />
    <result column="modifytime" jdbcType="TIMESTAMP" property="modifytime" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="fee" jdbcType="DOUBLE" property="fee" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, out_trade_no, normal_num_pay, platform_num_pay, state, proxy_phone, modifytime,
    createtime, fee
  </sql>
  <select id="selectByExample" parameterType="model.ProxyAccountBuyRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct`
    </if>
    <include refid="Base_Column_List" />
    from proxy_account_buyrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limitValue">
      limit #{startSize},#{pageSize}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from proxy_account_buyrecord
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from proxy_account_buyrecord
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.ProxyAccountBuyRecordExample">
    delete from proxy_account_buyrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.ProxyAccountBuyRecord">
    insert into proxy_account_buyrecord (id, out_trade_no, normal_num_pay,
    platform_num_pay, state, proxy_phone,
    modifytime, createtime, fee
    )
    values (#{id,jdbcType=INTEGER}, #{out_trade_no,jdbcType=VARCHAR}, #{normal_num_pay,jdbcType=INTEGER},
    #{platform_num_pay,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{proxy_phone,jdbcType=VARCHAR},
    #{modifytime,jdbcType=TIMESTAMP}, #{createtime,jdbcType=TIMESTAMP}, #{fee,jdbcType=DOUBLE}
    )
  </insert>
  <insert id="insertSelective" parameterType="model.ProxyAccountBuyRecord">
    insert into proxy_account_buyrecord
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="out_trade_no != null">
        out_trade_no,
      </if>
      <if test="normal_num_pay != null">
        normal_num_pay,
      </if>
      <if test="platform_num_pay != null">
        platform_num_pay,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="proxy_phone != null">
        proxy_phone,
      </if>
      <if test="modifytime != null">
        modifytime,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="fee != null">
        fee,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="out_trade_no != null">
        #{out_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="normal_num_pay != null">
        #{normal_num_pay,jdbcType=INTEGER},
      </if>
      <if test="platform_num_pay != null">
        #{platform_num_pay,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="proxy_phone != null">
        #{proxy_phone,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null">
        #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="fee != null">
        #{fee,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.ProxyAccountBuyRecordExample" resultType="java.lang.Integer">
    select count(*) from proxy_account_buyrecord
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update proxy_account_buyrecord
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.out_trade_no != null">
        out_trade_no = #{record.out_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="record.normal_num_pay != null">
        normal_num_pay = #{record.normal_num_pay,jdbcType=INTEGER},
      </if>
      <if test="record.platform_num_pay != null">
        platform_num_pay = #{record.platform_num_pay,jdbcType=INTEGER},
      </if>
      <if test="record.state != null">
        state = #{record.state,jdbcType=INTEGER},
      </if>
      <if test="record.proxy_phone != null">
        proxy_phone = #{record.proxy_phone,jdbcType=VARCHAR},
      </if>
      <if test="record.modifytime != null">
        modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fee != null">
        fee = #{record.fee,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update proxy_account_buyrecord
    set id = #{record.id,jdbcType=INTEGER},
    out_trade_no = #{record.out_trade_no,jdbcType=VARCHAR},
    normal_num_pay = #{record.normal_num_pay,jdbcType=INTEGER},
    platform_num_pay = #{record.platform_num_pay,jdbcType=INTEGER},
    state = #{record.state,jdbcType=INTEGER},
    proxy_phone = #{record.proxy_phone,jdbcType=VARCHAR},
    modifytime = #{record.modifytime,jdbcType=TIMESTAMP},
    createtime = #{record.createtime,jdbcType=TIMESTAMP},
    fee = #{record.fee,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.ProxyAccountBuyRecord">
    update proxy_account_buyrecord
    <set>
      <if test="out_trade_no != null">
        out_trade_no = #{out_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="normal_num_pay != null">
        normal_num_pay = #{normal_num_pay,jdbcType=INTEGER},
      </if>
      <if test="platform_num_pay != null">
        platform_num_pay = #{platform_num_pay,jdbcType=INTEGER},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="proxy_phone != null">
        proxy_phone = #{proxy_phone,jdbcType=VARCHAR},
      </if>
      <if test="modifytime != null">
        modifytime = #{modifytime,jdbcType=TIMESTAMP},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="fee != null">
        fee = #{fee,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.ProxyAccountBuyRecord">
    update proxy_account_buyrecord
    set out_trade_no = #{out_trade_no,jdbcType=VARCHAR},
      normal_num_pay = #{normal_num_pay,jdbcType=INTEGER},
      platform_num_pay = #{platform_num_pay,jdbcType=INTEGER},
      state = #{state,jdbcType=INTEGER},
      proxy_phone = #{proxy_phone,jdbcType=VARCHAR},
      modifytime = #{modifytime,jdbcType=TIMESTAMP},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      fee = #{fee,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>