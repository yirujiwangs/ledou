<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.CommonAreaMapper">
  <resultMap id="BaseResultMap" type="model.base.CommonArea">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="rid" jdbcType="INTEGER" property="rid" />
    <result column="pid" jdbcType="INTEGER" property="pid" />
    <result column="fullname" jdbcType="VARCHAR" property="fullname" />
    <result column="lat" jdbcType="DOUBLE" property="lat" />
    <result column="lng" jdbcType="DOUBLE" property="lng" />
    <result column="last_time" jdbcType="INTEGER" property="last_time" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, rid, pid, fullname, lat, lng, last_time, createtime
  </sql>
  <select id="selectByExample" parameterType="model.base.CommonAreaExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from common_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from common_area
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from common_area
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.base.CommonAreaExample">
    delete from common_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.base.CommonArea">
    insert into common_area (id, name, rid, 
      pid, fullname, lat, 
      lng, last_time, createtime
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{rid,jdbcType=INTEGER}, 
      #{pid,jdbcType=INTEGER}, #{fullname,jdbcType=VARCHAR}, #{lat,jdbcType=DOUBLE}, 
      #{lng,jdbcType=DOUBLE}, #{last_time,jdbcType=INTEGER}, #{createtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="model.base.CommonArea">
    insert into common_area
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="rid != null">
        rid,
      </if>
      <if test="pid != null">
        pid,
      </if>
      <if test="fullname != null">
        fullname,
      </if>
      <if test="lat != null">
        lat,
      </if>
      <if test="lng != null">
        lng,
      </if>
      <if test="last_time != null">
        last_time,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="rid != null">
        #{rid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        #{pid,jdbcType=INTEGER},
      </if>
      <if test="fullname != null">
        #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lng != null">
        #{lng,jdbcType=DOUBLE},
      </if>
      <if test="last_time != null">
        #{last_time,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.base.CommonAreaExample" resultType="java.lang.Integer">
    select count(*) from common_area
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="selectSubByAreaCode" resultType="java.lang.String">
    SELECT rid FROM common_area WHERE
    pid IN(
    SELECT rid FROM common_area WHERE
    pid IN (SELECT rid  FROM common_area WHERE pid = #{areaCode,jdbcType=VARCHAR} OR rid =#{areaCode,jdbcType=VARCHAR})
    OR rid IN (SELECT rid  FROM common_area WHERE pid = #{areaCode,jdbcType=VARCHAR} OR rid =#{areaCode,jdbcType=VARCHAR})
    )
    OR rid IN (
    SELECT rid FROM common_area WHERE
    pid IN (SELECT rid  FROM common_area WHERE pid = #{areaCode,jdbcType=VARCHAR} OR rid =#{areaCode,jdbcType=VARCHAR})
    OR rid IN (SELECT rid  FROM common_area WHERE pid = #{areaCode,jdbcType=VARCHAR} OR rid =#{areaCode,jdbcType=VARCHAR})
    )
  </select>

  <select id="selectDirSubByAreaCode" resultType="java.lang.String">
    SELECT rid  FROM common_area
    WHERE pid = #{areaCode,jdbcType=VARCHAR}
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update common_area
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.rid != null">
        rid = #{record.rid,jdbcType=INTEGER},
      </if>
      <if test="record.pid != null">
        pid = #{record.pid,jdbcType=INTEGER},
      </if>
      <if test="record.fullname != null">
        fullname = #{record.fullname,jdbcType=VARCHAR},
      </if>
      <if test="record.lat != null">
        lat = #{record.lat,jdbcType=DOUBLE},
      </if>
      <if test="record.lng != null">
        lng = #{record.lng,jdbcType=DOUBLE},
      </if>
      <if test="record.last_time != null">
        last_time = #{record.last_time,jdbcType=INTEGER},
      </if>
      <if test="record.createtime != null">
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update common_area
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      rid = #{record.rid,jdbcType=INTEGER},
      pid = #{record.pid,jdbcType=INTEGER},
      fullname = #{record.fullname,jdbcType=VARCHAR},
      lat = #{record.lat,jdbcType=DOUBLE},
      lng = #{record.lng,jdbcType=DOUBLE},
      last_time = #{record.last_time,jdbcType=INTEGER},
      createtime = #{record.createtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.base.CommonArea">
    update common_area
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="rid != null">
        rid = #{rid,jdbcType=INTEGER},
      </if>
      <if test="pid != null">
        pid = #{pid,jdbcType=INTEGER},
      </if>
      <if test="fullname != null">
        fullname = #{fullname,jdbcType=VARCHAR},
      </if>
      <if test="lat != null">
        lat = #{lat,jdbcType=DOUBLE},
      </if>
      <if test="lng != null">
        lng = #{lng,jdbcType=DOUBLE},
      </if>
      <if test="last_time != null">
        last_time = #{last_time,jdbcType=INTEGER},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.base.CommonArea">
    update common_area
    set name = #{name,jdbcType=VARCHAR},
      rid = #{rid,jdbcType=INTEGER},
      pid = #{pid,jdbcType=INTEGER},
      fullname = #{fullname,jdbcType=VARCHAR},
      lat = #{lat,jdbcType=DOUBLE},
      lng = #{lng,jdbcType=DOUBLE},
      last_time = #{last_time,jdbcType=INTEGER},
      createtime = #{createtime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>