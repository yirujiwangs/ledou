<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.StoreAccountBuyRecordMapper">
  <resultMap id="BaseResultMap" type="model.StoreAccountBuyRecord">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="utoken" jdbcType="VARCHAR" property="utoken" />
    <result column="partner_trade_no" jdbcType="VARCHAR" property="partner_trade_no" />
    <result column="amount" jdbcType="INTEGER" property="amount" />
    <result column="rule_id" jdbcType="INTEGER" property="rule_id" />
    <result column="unit_price" jdbcType="INTEGER" property="unit_price" />
    <result column="total_fee" jdbcType="INTEGER" property="total_fee" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="type_sec" jdbcType="VARCHAR" property="type_sec" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, utoken, partner_trade_no, amount, rule_id, unit_price, total_fee, status, type_sec, 
    comment, time
  </sql>
  <select id="selectByExample" parameterType="model.StoreAccountBuyRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from store_account_buy_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from store_account_buy_record
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from store_account_buy_record
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="model.StoreAccountBuyRecordExample">
    delete from store_account_buy_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.StoreAccountBuyRecord">
    insert into store_account_buy_record (id, utoken, partner_trade_no, 
      amount, rule_id, unit_price, 
      total_fee, status, type_sec, 
      comment, time)
    values (#{id,jdbcType=INTEGER}, #{utoken,jdbcType=VARCHAR}, #{partner_trade_no,jdbcType=VARCHAR}, 
      #{amount,jdbcType=INTEGER}, #{rule_id,jdbcType=INTEGER}, #{unit_price,jdbcType=INTEGER}, 
      #{total_fee,jdbcType=INTEGER}, #{status,jdbcType=VARCHAR}, #{type_sec,jdbcType=VARCHAR}, 
      #{comment,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="model.StoreAccountBuyRecord">
    insert into store_account_buy_record
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="utoken != null">
        utoken,
      </if>
      <if test="partner_trade_no != null">
        partner_trade_no,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="rule_id != null">
        rule_id,
      </if>
      <if test="unit_price != null">
        unit_price,
      </if>
      <if test="total_fee != null">
        total_fee,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="type_sec != null">
        type_sec,
      </if>
      <if test="comment != null">
        comment,
      </if>
      <if test="time != null">
        time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="utoken != null">
        #{utoken,jdbcType=VARCHAR},
      </if>
      <if test="partner_trade_no != null">
        #{partner_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=INTEGER},
      </if>
      <if test="rule_id != null">
        #{rule_id,jdbcType=INTEGER},
      </if>
      <if test="unit_price != null">
        #{unit_price,jdbcType=INTEGER},
      </if>
      <if test="total_fee != null">
        #{total_fee,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="type_sec != null">
        #{type_sec,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        #{comment,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.StoreAccountBuyRecordExample" resultType="java.lang.Integer">
    select count(*) from store_account_buy_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update store_account_buy_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.utoken != null">
        utoken = #{record.utoken,jdbcType=VARCHAR},
      </if>
      <if test="record.partner_trade_no != null">
        partner_trade_no = #{record.partner_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=INTEGER},
      </if>
      <if test="record.rule_id != null">
        rule_id = #{record.rule_id,jdbcType=INTEGER},
      </if>
      <if test="record.unit_price != null">
        unit_price = #{record.unit_price,jdbcType=INTEGER},
      </if>
      <if test="record.total_fee != null">
        total_fee = #{record.total_fee,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.type_sec != null">
        type_sec = #{record.type_sec,jdbcType=VARCHAR},
      </if>
      <if test="record.comment != null">
        comment = #{record.comment,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update store_account_buy_record
    set id = #{record.id,jdbcType=INTEGER},
      utoken = #{record.utoken,jdbcType=VARCHAR},
      partner_trade_no = #{record.partner_trade_no,jdbcType=VARCHAR},
      amount = #{record.amount,jdbcType=INTEGER},
      rule_id = #{record.rule_id,jdbcType=INTEGER},
      unit_price = #{record.unit_price,jdbcType=INTEGER},
      total_fee = #{record.total_fee,jdbcType=INTEGER},
      status = #{record.status,jdbcType=VARCHAR},
      type_sec = #{record.type_sec,jdbcType=VARCHAR},
      comment = #{record.comment,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.StoreAccountBuyRecord">
    update store_account_buy_record
    <set>
      <if test="utoken != null">
        utoken = #{utoken,jdbcType=VARCHAR},
      </if>
      <if test="partner_trade_no != null">
        partner_trade_no = #{partner_trade_no,jdbcType=VARCHAR},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=INTEGER},
      </if>
      <if test="rule_id != null">
        rule_id = #{rule_id,jdbcType=INTEGER},
      </if>
      <if test="unit_price != null">
        unit_price = #{unit_price,jdbcType=INTEGER},
      </if>
      <if test="total_fee != null">
        total_fee = #{total_fee,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="type_sec != null">
        type_sec = #{type_sec,jdbcType=VARCHAR},
      </if>
      <if test="comment != null">
        comment = #{comment,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.StoreAccountBuyRecord">
    update store_account_buy_record
    set utoken = #{utoken,jdbcType=VARCHAR},
      partner_trade_no = #{partner_trade_no,jdbcType=VARCHAR},
      amount = #{amount,jdbcType=INTEGER},
      rule_id = #{rule_id,jdbcType=INTEGER},
      unit_price = #{unit_price,jdbcType=INTEGER},
      total_fee = #{total_fee,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      type_sec = #{type_sec,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>