<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.RefundMapper" >
  <resultMap id="BaseResultMap" type="model.Refund" >
    <id column="out_trade_no" property="outTradeNo" jdbcType="VARCHAR" />
    <result column="phoneNum" property="phonenum" jdbcType="VARCHAR" />
    <result column="fee" property="fee" jdbcType="DOUBLE" />
    <result column="account" property="account" jdbcType="VARCHAR" />
    <result column="applicant" property="applicant" jdbcType="VARCHAR" />
    <result column="date" property="date" jdbcType="DATE" />
    <result column="date_time" property="date_time" jdbcType="TIMESTAMP" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="result" property="result" jdbcType="VARCHAR" />
    <result column="cause" property="cause" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    out_trade_no, phoneNum, fee, account, applicant, date, date_time, remark, result, 
    cause
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="model.RefundExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from refund_record
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from refund_record
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="model.RefundExample" >
    delete from refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="model.Refund" >
    insert into refund_record (out_trade_no, phoneNum, fee, 
      account, applicant, date, 
      date_time, remark, result, 
      cause)
    values (#{outTradeNo,jdbcType=VARCHAR}, #{phonenum,jdbcType=VARCHAR}, #{fee,jdbcType=DOUBLE}, 
      #{account,jdbcType=VARCHAR}, #{applicant,jdbcType=VARCHAR}, #{date,jdbcType=DATE}, 
      #{date_time,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{result,jdbcType=VARCHAR}, 
      #{cause,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="model.Refund" >
    insert into refund_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="outTradeNo != null" >
        out_trade_no,
      </if>
      <if test="phonenum != null" >
        phoneNum,
      </if>
      <if test="fee != null" >
        fee,
      </if>
      <if test="account != null" >
        account,
      </if>
      <if test="applicant != null" >
        applicant,
      </if>
      <if test="date != null" >
        date,
      </if>
      <if test="date_time != null" >
        date_time,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="result != null" >
        result,
      </if>
      <if test="cause != null" >
        cause,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="outTradeNo != null" >
        #{outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="phonenum != null" >
        #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        #{fee,jdbcType=DOUBLE},
      </if>
      <if test="account != null" >
        #{account,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        #{date,jdbcType=DATE},
      </if>
      <if test="date_time != null" >
        #{date_time,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        #{result,jdbcType=VARCHAR},
      </if>
      <if test="cause != null" >
        #{cause,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="model.RefundExample" resultType="java.lang.Integer" >
    select count(*) from refund_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update refund_record
    <set >
      <if test="record.outTradeNo != null" >
        out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      </if>
      <if test="record.phonenum != null" >
        phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      </if>
      <if test="record.fee != null" >
        fee = #{record.fee,jdbcType=DOUBLE},
      </if>
      <if test="record.account != null" >
        account = #{record.account,jdbcType=VARCHAR},
      </if>
      <if test="record.applicant != null" >
        applicant = #{record.applicant,jdbcType=VARCHAR},
      </if>
      <if test="record.date != null" >
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.date_time != null" >
        date_time = #{record.date_time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        remark = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null" >
        result = #{record.result,jdbcType=VARCHAR},
      </if>
      <if test="record.cause != null" >
        cause = #{record.cause,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update refund_record
    set out_trade_no = #{record.outTradeNo,jdbcType=VARCHAR},
      phoneNum = #{record.phonenum,jdbcType=VARCHAR},
      fee = #{record.fee,jdbcType=DOUBLE},
      account = #{record.account,jdbcType=VARCHAR},
      applicant = #{record.applicant,jdbcType=VARCHAR},
      date = #{record.date,jdbcType=DATE},
      date_time = #{record.date_time,jdbcType=TIMESTAMP},
      remark = #{record.remark,jdbcType=VARCHAR},
      result = #{record.result,jdbcType=VARCHAR},
      cause = #{record.cause,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="model.Refund" >
    update refund_record
    <set >
      <if test="phonenum != null" >
        phoneNum = #{phonenum,jdbcType=VARCHAR},
      </if>
      <if test="fee != null" >
        fee = #{fee,jdbcType=DOUBLE},
      </if>
      <if test="account != null" >
        account = #{account,jdbcType=VARCHAR},
      </if>
      <if test="applicant != null" >
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="date != null" >
        date = #{date,jdbcType=DATE},
      </if>
      <if test="date_time != null" >
        date_time = #{date_time,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="result != null" >
        result = #{result,jdbcType=VARCHAR},
      </if>
      <if test="cause != null" >
        cause = #{cause,jdbcType=VARCHAR},
      </if>
    </set>
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="model.Refund" >
    update refund_record
    set phoneNum = #{phonenum,jdbcType=VARCHAR},
      fee = #{fee,jdbcType=DOUBLE},
      account = #{account,jdbcType=VARCHAR},
      applicant = #{applicant,jdbcType=VARCHAR},
      date = #{date,jdbcType=DATE},
      date_time = #{date_time,jdbcType=TIMESTAMP},
      remark = #{remark,jdbcType=VARCHAR},
      result = #{result,jdbcType=VARCHAR},
      cause = #{cause,jdbcType=VARCHAR}
    where out_trade_no = #{outTradeNo,jdbcType=VARCHAR}
  </update>
  <!--<update id="updateById" parameterType="java.lang.String">
  UPDATE  refund_record
  SET result = #{result},
      cause =#{cause}
  WHERE out_trade_no = #{outTradeNo}
  </update>-->
</mapper>